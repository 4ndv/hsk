{"version":3,"file":"static/webpack/static/development/pages/index.js.1a288ab80bf5420c0c76.hot-update.js","sources":["webpack:///./components/SettingsForm.js"],"sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { useForm, Controller } from 'react-hook-form'\n\nimport {\n  Form, FormGroup, Label, Input, Button\n} from 'reactstrap'\n\nimport ButtonCheckboxGroup from './ButtonCheckboxGroup'\n\nconst SettingsForm = (props) => {\n  const { onSubmit } = props\n\n  const { control, register, handleSubmit } = useForm({\n    defaultValues: {\n      levels: [1, 2, 3, 4],\n      wordsLimit: 0,\n      modes: ['characters-pinyin'],\n      alwaysShowPinyin: false,\n      alwaysShowTranslation: false\n    }\n  })\n\n  return (\n    <Form onSubmit={handleSubmit(onSubmit)}>\n      <FormGroup>\n        <Label for=\"levels\">HSK Levels (all levels does not include previous ones)</Label>\n        <div>\n          <Controller\n            as={ButtonCheckboxGroup}\n            control={control}\n            rules={{ required: true }}\n            options={[\n              { value: 1, label: 'HSK 1' },\n              { value: 2, label: 'HSK 2' },\n              { value: 3, label: 'HSK 3' },\n              { value: 4, label: 'HSK 4' },\n              { value: 5, label: 'HSK 5' },\n              { value: 6, label: 'HSK 6' }\n            ]}\n            name=\"levels\"\n            valueName=\"selected\"\n            color=\"secondary\"\n          />\n        </div>\n      </FormGroup>\n      <FormGroup>\n        <Label for=\"words-limit\">Words limit (0 = disabled)</Label>\n        <Input\n          type=\"number\"\n          name=\"wordsLimit\"\n          placeholder=\"0\"\n          id=\"words-limit\"\n          min={0}\n          innerRef={register()}\n        />\n      </FormGroup>\n      <FormGroup className=\"mb-0\">\n        <Label for=\"modes\">Modes (if multiple selected modes will be randomized)</Label>\n      </FormGroup>\n      <FormGroup check>\n        <Label check>\n          <Input\n            type=\"checkbox\"\n            name=\"modes\"\n            value=\"characters-pinyin\"\n            innerRef={register()}\n          />\n          {' '}\n          Select pinyin for characters\n        </Label>\n      </FormGroup>\n      <FormGroup check>\n        <Label check>\n          <Input\n            type=\"checkbox\"\n            name=\"modes\"\n            value=\"pinyin-characters\"\n            innerRef={register()}\n          />\n          {' '}\n          Select characters for pinyin\n        </Label>\n      </FormGroup>\n      <FormGroup check>\n        <Label check>\n          <Input\n            type=\"checkbox\"\n            name=\"modes\"\n            value=\"characters-translation\"\n            innerRef={register()}\n          />\n          {' '}\n          Select translation for characters\n        </Label>\n      </FormGroup>\n      <FormGroup check>\n        <Label check>\n          <Input\n            type=\"checkbox\"\n            name=\"modes\"\n            value=\"translation-characters\"\n            innerRef={register()}\n          />\n          {' '}\n          Select characters for translation\n        </Label>\n      </FormGroup>\n      <FormGroup className=\"mb-0 mt-2\">\n        <Label for=\"modes\">Other settings</Label>\n      </FormGroup>\n      <FormGroup check>\n        <Label check>\n          <Input\n            type=\"checkbox\"\n            name=\"alwaysShowPinyin\"\n            innerRef={register()}\n          />\n          {' '}\n          Always show pinyin\n        </Label>\n      </FormGroup>\n      <FormGroup check>\n        <Label check>\n          <Input\n            type=\"checkbox\"\n            name=\"alwaysShowTranslation\"\n            innerRef={register()}\n          />\n          {' '}\n          Always show translation\n        </Label>\n      </FormGroup>\n      <FormGroup className=\"mt-3\">\n        <Button type=\"submit\" color=\"primary\" size=\"lg\">Start</Button>\n      </FormGroup>\n    </Form>\n  )\n}\n\nSettingsForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired\n}\n\nexport default SettingsForm\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAEA;AAIA;AACA;AACA;AAAA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AAHA;AAAA;AAAA;AACA;AAYA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AADA;AAIA;;;;A","sourceRoot":""}